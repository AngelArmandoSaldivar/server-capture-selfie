{"version":3,"sources":["components/App.js","index.js"],"names":["MiComponente","imagenes","setImagenes","useState","error","setError","selectedIndex","setSelectedIndex","carga","setCarga","handleButtonClick","document","getElementById","click","_jsxs","className","children","_jsx","onClick","length","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","console","log","fetch","then","response","text","result","catch","id","type","accept","multiple","onChange","event","files","Array","from","target","validFiles","filter","file","startsWith","size","promises","map","Promise","resolve","reject","reader","FileReader","onloadend","base64SinPrefijo","replace","onerror","readAsDataURL","all","results","prevImagenes","updatedImages","slice","style","display","imagen","index","_Fragment","handleImageClick","src","concat","alt","rootElement","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.403326e1.chunk.js","sourcesContent":["// import React, { useState, useCallback, useRef, useEffect } from 'react';\r\n// import ReactCrop from 'react-image-crop';\r\n// import Webcam from 'react-webcam';\r\n\r\n// import 'react-image-crop/dist/ReactCrop.css';\r\n\r\n// import 'react-image-crop/dist/ReactCrop.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import Button from '@mui/material/Button';\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import CardHeader from '@mui/material/CardHeader';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\n// import MoreVertIcon from '@mui/icons-material/MoreVert';\r\n// import CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n// import { styled } from '@mui/material/styles';\r\n// import CameraIcon from '@mui/icons-material/Camera';\r\n// import ArrowBackIcon from '@mui/icons-material/ArrowBack';//Siguiente\r\n// import ContentCutIcon from '@mui/icons-material/ContentCut'; //Tijeras\r\n// import ReplayIcon from '@mui/icons-material/Replay'; //Volver\r\n// import CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';//Check Continuar\r\n// import ovalImage from './img/contorno1.png';\r\n\r\n// const ImageCropper = () => {\r\n\r\n//   const [upImg, setUpImg] = useState();\r\n//   const imgRef = useRef(null);  \r\n//   const webcamRef = useRef(null);    \r\n//   const [show, setShow] = useState(true);\r\n//   const [show2, setShow2] = useState(false);\r\n//   const [show3, setShow3] = useState(false);\r\n//   const [show4, setShow4] = useState(false);\r\n//   const [dataSelfie, setDataSelfie] = useState([]);\r\n//   const [selfieCrop, setSelfieCrop] = useState({ unit: '%', x: 27, y: 10, width: 50, height: 80, aspect: 3 / 4 });\r\n//   const [crop, setCrop] = useState({ unit: '%', x: 20, y: 30, width: 75, height: 40, aspect: 3 / 2 });  const [croppedImage, setCroppedImage] = useState('null');\r\n//   const [showOverlay, setShowOverlay] = useState(true);\r\n//   const [src, setSrc] = useState(null);\r\n//   const [cropWidth, setCropWidth] = useState('');\r\n//   const [cropHeight, setCropHeight] = useState('');\r\n//   const [cropX, setCropX] = useState('');\r\n//   const [cropY, setCropY] = useState('');\r\n//   const [token, setToken] = useState(null);\r\n//   const [carga, setCarga] = useState('');\r\n\r\n//   //VARIABLES DE ENTORNO\r\n//   const clientId = process.env.CLIENT_ID;\r\n//   const clientSecret = process.env.CLIENT_SECRET;\r\n\r\n\r\n//   const onSelectFile = useCallback((e) => {\r\n//     if (webcamRef.current.getScreenshot()) {\r\n//       setCrop({ unit: '%', x: 20, y: 30, width: 60, height: 40, aspect: 3 / 2 }); \r\n//       const reader = new FileReader();      \r\n//       setSrc(webcamRef.current.getScreenshot());\r\n//       setUpImg(webcamRef.current.getScreenshot());\r\n\r\n//       const fileDetail = [\r\n//         '',\r\n//         new Uint8Array([10]),\r\n//         new Uint32Array([2]),\r\n//       ];\r\n//       const file = new File(\r\n//       [fileDetail], 'file.png',\r\n//       {lastModified: new Date(2022, 0, 5), type: ''});\r\n//       reader.readAsDataURL(file);\r\n//       setShow(!show);\r\n//       setShow2(!show2);\r\n//       setShowOverlay(false);\r\n//     }\r\n//   }, [webcamRef]);\r\n\r\n//   const onLoad = useCallback((img) => {\r\n//     imgRef.current = img;\r\n//   }, []);  \r\n\r\n//   const onCropComplete = (crop) => {    \r\n//     setCropX(crop.x);\r\n//     setCropY(crop.y);\r\n//     setCropWidth(crop.width);\r\n//     setCropHeight(crop.height);    \r\n//   };\r\n\r\n//   var makeClientCrop = async (crop) => {\r\n//     if (src && cropWidth && cropHeight) {\r\n//       crop.width = cropWidth;\r\n//       crop.height = cropHeight;  \r\n//       crop.x = cropX;\r\n//       crop.y = cropY;    \r\n//       const croppedImageUrl = await getCroppedImg(src, crop);\r\n//       setCroppedImage(croppedImageUrl);\r\n//     }\r\n//   }; \r\n\r\n//   const getCroppedImg = (src, crop) => {\r\n//     return new Promise((resolve, reject) => {\r\n//       const image = new Image();\r\n//       image.src = src;\r\n//       image.onload = () => {\r\n//         const canvas = document.createElement('canvas');\r\n//         const scaleX = image.naturalWidth / image.width;\r\n//         const scaleY = image.naturalHeight / image.height;\r\n//         canvas.width = crop.width;\r\n//         canvas.height = crop.height;\r\n//         const ctx = canvas.getContext('2d');\r\n  \r\n//         // Habilitar el suavizado de imágenes\r\n//         ctx.imageSmoothingEnabled = true;\r\n//         ctx.imageSmoothingQuality = 'high'; \r\n  \r\n//         ctx.drawImage(\r\n//           image,\r\n//           crop.x * scaleX,\r\n//           crop.y * scaleY,\r\n//           crop.width * scaleX,\r\n//           crop.height * scaleY,\r\n//           0,\r\n//           0,\r\n//           crop.width,\r\n//           crop.height\r\n//         );\r\n  \r\n//         canvas.toBlob((blob) => {\r\n//           const reader = new FileReader();\r\n//           reader.readAsDataURL(blob);\r\n//           reader.onloadend = () => {\r\n//             setDataSelfie((prev) => [...prev, reader.result]);\r\n//             resolve(reader.result);\r\n//           };\r\n//         }, 'image/jpeg', 1); // Ajuste de la calidad máxima\r\n//         setShow2(!show2);\r\n//         setShow3(!show3);\r\n//       };\r\n//       image.onerror = (error) => {\r\n//         reject(error);\r\n//       };\r\n//     });\r\n//   };\r\n  \r\n\r\n//   var ocultarPasoUno = () => {\r\n//     setShow(!show);\r\n//     setShow2(!show2);\r\n//     setShowOverlay(true);\r\n//     if(show3 == true) {\r\n//       return dataSelfie.length > 0 ? dataSelfie = [] : '';\r\n//     }    \r\n//   }\r\n\r\n//   var ocultarPasoTres = () => {\r\n//     setShow3(!show3);\r\n//     setShow(!show);\r\n//     setShowOverlay(true);\r\n\r\n//     dataSelfie.pop();    \r\n//   }\r\n\r\n//   var pasoSiguiente = () => {\r\n//     setShow3(!show3);\r\n//     setShow(!show); \r\n//     setShowOverlay(true);   \r\n//     setCrop({ x: 70, y: 50, width: 220, height: 250 });\r\n\r\n//     if(dataSelfie.length == 3) {\r\n//       setShow(false);\r\n//       setShow2(false);\r\n//       setShow3(false);\r\n//       setShow4(!show4);      \r\n//       pruebaVida(dataSelfie);\r\n//     }\r\n//   }\r\n\r\n//   var pruebaVida = async (dataSelfie) => {\r\n\r\n//     //**\r\n//     //**\r\n//     //Verificador de Documentos (Prueba de vida).\r\n\r\n//     var ineBack = dataSelfie[0].replace(new RegExp(\"data:image/jpeg;base64,\", \"gi\"), \"\");\r\n//     console.log(\"INE: \"+ ineBack);\r\n//     var ineFront = dataSelfie[1].replace(new RegExp(\"data:image/jpeg;base64,\", \"gi\"), \"\");\r\n//     var selfie = dataSelfie[2].replace(new RegExp(\"data:image/jpeg;base64,\", \"gi\"), \"\");\r\n\r\n//     const myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     const raw = JSON.stringify({\r\n//       \"ineFront\": ineBack,\r\n//       \"ineBack\": ineFront,\r\n//       \"selfie\": selfie\r\n//     });\r\n    \r\n//     const requestOptions = {\r\n//       method: \"POST\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     console.log(\"FOTOS: \" + raw);\r\n\r\n//     setCarga(\"Verificación facial en curso \\n Espera un momento...\")    \r\n//     //fetch(\"localhost:5000/app/verificacion\", requestOptions)\r\n    \r\n//     fetch(\"https://server-capture-selfie-d4c65bd43858.herokuapp.com/app/verificacion\", requestOptions)\r\n//     .then((response) => response.text())\r\n//     .then((result) => {\r\n//       console.log(\"RESULT: \" + result);\r\n//       if(result != 'El customer fue registrado') {\r\n//         setCarga(\"No se pudo verificar tu identidad 🙁\")\r\n//       } else {\r\n//         setCarga(\"Verificación de identidad exitosa 🙂\")\r\n//       }\r\n//     })\r\n//     .catch((error) => console.error(error));\r\n\r\n//   }\r\n\r\n//   const estilos = {\r\n//     contenedor: {\r\n//       width: '100%',\r\n//       border: '1px solid black',\r\n//       textAlign: 'center',\r\n//       backgroundColor: '#c0c0c0', \r\n//       fontFamily: ['Open Sans', 'Helvetica', 'sans-serif'].join(','),\r\n//       padding: '20px',\r\n//       boxSizing: 'border-box',\r\n//       color: '#333',\r\n//     },\r\n//     botonFoto: {\r\n//       color: 'white',\r\n//       border: '1px solid #007BFF',\r\n//       backgroundColor: '#007BFF',\r\n//       margin: '10px',\r\n//       width: '200px',\r\n//       height: '50px',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       borderRadius: '5px',\r\n//       transition: 'background-color 0.3s ease',\r\n//     },\r\n//     botonFotoHover: {\r\n//       backgroundColor: '#0056b3',\r\n//       border: '1px solid white',\r\n//       margin: '10px 0',\r\n//     },\r\n//     titulo: {\r\n//       fontSize: '1.5em',\r\n//       fontWeight: 'bold',\r\n//       margin: '10px 0',\r\n//       backgroundColor: '#007BFF', \r\n//       color: 'white', \r\n//       padding: '10px',\r\n//       borderRadius: '5px',\r\n//       '@media (maxWidth: 768px)': {\r\n//         fontSize: '1.5em',\r\n//       }\r\n//     },\r\n//     subtitulo: {\r\n//       fontSize: '1.5em',\r\n//       margin: '10px 0',\r\n//       backgroundColor: '#007BFF', \r\n//       color: 'white', \r\n//       padding: '10px',\r\n//       borderRadius: '5px',\r\n//       '@media (maxWidth: 768px)': {\r\n//         fontSize: '1.2em',\r\n//       },\r\n//       margin: '10px 0',\r\n//       backgroundColor: '#007BFF', \r\n//       color: 'white', \r\n//       padding: '10px',\r\n//       borderRadius: '5px',\r\n//     },\r\n//     textoGeneral: {\r\n//       fontSize: '1em',\r\n//       lineHeight: '1.5',\r\n//       margin: '10px 0',\r\n//       backgroundColor: 'rgba(255, 255, 255, 0.😎', \r\n//       color: '#333', \r\n//       padding: '10px',\r\n//       borderRadius: '5px',\r\n//       '@media (maxWidth: 768px)': {\r\n//         fontSize: '1em',\r\n//       },\r\n//     },\r\n//     recuadroPunteadoInterno: {\r\n//       border: '2px dashed white', \r\n//       position: 'absolute',\r\n//       width: '75%',\r\n//       height: '40%',\r\n//       top: '50%',\r\n//       left: '50%',\r\n//       transform: 'translate(-50%, -50%)',\r\n//       pointerEvents: 'none',\r\n//       maxWidth: '80%',\r\n//       maxHeight: '60%',\r\n//     },\r\n//     imagenOvalada: {\r\n//       position: 'absolute',\r\n//       width: '90%', // Aumentar tamaño\r\n//       height: '100%', // Aumentar tamaño\r\n//       top: '50%',\r\n//       left: '50%',\r\n//       transform: 'translate(-50%, -50%)',\r\n//       pointerEvents: 'none',\r\n//       maxWidth: '100%', // Ajuste máximo\r\n//       maxHeight: '100%', // Ajuste máximo\r\n//     },\r\n//     '@media (min-width: 769px) and (maxWidth: 1024px)': {\r\n//       width: '85vw',\r\n//       height: '95vh',\r\n//     },\r\n//     '@media (min-width: 1025px)': {\r\n//       width: '90vw',\r\n//       height: '100vh',\r\n//   },\r\n//     webcamContenedor: {\r\n//       position: 'relative',\r\n//       width: '100%',\r\n//       height: 'auto',\r\n//       marginBottom: '20px',\r\n//       borderRadius: '10px',\r\n//       overflow: 'hidden',\r\n//     },\r\n//     webcam: {\r\n//       width: '100%',\r\n//       height: 'auto',\r\n//       borderRadius: '10px',\r\n//     },\r\n//     imagenRecortada: {\r\n//       width: '100%',\r\n//       height: 'auto',\r\n//       maxWidth: '100%',\r\n//       maxHeight: '500px',\r\n//       borderRadius: '10px',\r\n//       boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n//     },\r\n//     cropContainer: {\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       width: '100%',\r\n//       height: 'auto',\r\n//       margin: '0 auto',\r\n//       borderRadius: '10px',\r\n//       overflow: 'hidden',\r\n//       boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n//     },\r\n//     buttonContainer: {\r\n//       display: 'flex',\r\n//       flexDirection: 'column', \r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       gap: '.5px', \r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div className='App' style={estilos.contenedor}>\r\n//       {show && (\r\n//         <div style={{ ...estilos.textoGeneral, ...estilos.colorTexto }}>\r\n//           {dataSelfie.length === 0 && (\r\n//             <>\r\n//               <h1 style={estilos.titulo}>Identificacion parte Delantera</h1><br />\r\n//               <p>Coloca tu documento de identidad dentro del recuadro para realizar la captura.</p>\r\n//             </>\r\n//           )}\r\n//           {dataSelfie.length === 1 && (\r\n//             <>\r\n//               <h1 style={estilos.titulo}>Identificacion parte Trasera</h1><br />\r\n//               <p>Coloca tu documento de identidad dentro del recuadro para realizar la captura.</p>\r\n//             </>\r\n//           )}\r\n//           {dataSelfie.length === 2 && (\r\n//             <>\r\n//               <h1>Tómate una Selfie</h1><br />\r\n//               <p>Coloca tu rostro dentro del óvalo para realizar la captura.</p>\r\n//             </>\r\n//           )}\r\n  \r\n//           <div style={estilos.webcamContenedor}>\r\n//             <Webcam\r\n//               videoConstraints={dataSelfie.length === 2 ? { facingMode: 'user' } : { facingMode: 'environment' }}\r\n//               audio={false}\r\n//               ref={webcamRef}\r\n//               screenshotFormat='image/jpeg'\r\n//               style={estilos.webcam}\r\n//             />\r\n//             {showOverlay && (\r\n//               <div style={dataSelfie.length === 2 ? estilos.ovaloPunteadoInterno : estilos.recuadroPunteadoInterno}></div>\r\n//             )}\r\n\r\n//             {dataSelfie.length === 2 ? (\r\n//               <img src={ovalImage} alt=\"Oval overlay\" style={estilos.imagenOvalada} />\r\n//             ) : (\r\n//               <div style={estilos.recuadroPunteadoInterno}></div>\r\n//             )}\r\n \r\n//           </div>\r\n//           <span style={{ marginLeft: '0px' }}></span>\r\n//           <center> <Button\r\n//             component='label'\r\n//             role={undefined}\r\n//             variant='outlined'\r\n//             tabIndex={-1}\r\n//             startIcon={<CameraIcon />}\r\n//             style={estilos.botonFoto}\r\n//             onClick={onSelectFile}\r\n//           >\r\n//             Tomar foto\r\n//           </Button></center>\r\n//         </div>\r\n//       )}\r\n  \r\n//       {show2 && (\r\n//         <div style={{ ...estilos.textoGeneral, ...estilos.colorTexto }}>\r\n//           <h1 style={{ ...estilos.titulo, ...estilos.colorTexto }}>Recortar foto</h1>\r\n//           <span style={{ ...estilos.textoGeneral, ...estilos.colorTexto }}>\r\n//             Recorta la foto del documento para obtener un mejor resultado.\r\n//           </span><br /><br />\r\n//           <div style={estilos.cropContainer}>\r\n//             <ReactCrop\r\n//               src={upImg}\r\n//               crop={dataSelfie.length === 2 ? selfieCrop : crop}\r\n//               onImageLoaded={onLoad}\r\n//               onChange={(newCrop) => dataSelfie.length === 2 ? setSelfieCrop(newCrop) : setCrop(newCrop)}\r\n//               onComplete={onCropComplete}\r\n//               style={{ maxWidth: '100%', maxHeight: '100%' }}\r\n\r\n//               />\r\n//           </div>\r\n//           <center>\r\n//           <Button\r\n//             component='label'\r\n//             role={undefined}\r\n//             variant='outlined'\r\n//             tabIndex={-1}\r\n//             startIcon={<ContentCutIcon />}\r\n//             style={estilos.botonFoto}\r\n//             onClick={() => makeClientCrop(dataSelfie.length === 2 ? selfieCrop : crop)}\r\n//             >\r\n//             Recortar Foto\r\n//           </Button></center>\r\n//           <span style={{ marginLeft: '0px' }}></span>\r\n//           <center>\r\n//           <Button\r\n//             component='label'\r\n//             role={undefined}\r\n//             variant='outlined'\r\n//             tabIndex={-1}\r\n//             startIcon={<ReplayIcon />}\r\n//             style={estilos.botonFoto}\r\n//             onClick={ocultarPasoUno}\r\n//           >\r\n//             Repetir foto\r\n//           </Button></center>\r\n//         </div>\r\n//     )}\r\n  \r\n//       {show3 && (\r\n//         <div style={{ ...estilos.textoGeneral, ...estilos.colorTexto }}>\r\n//           <div style={{ ...estilos.textoGeneral, ...estilos.colorTexto }}>\r\n//             <h2 style={estilos.titulo}>Foto capturada</h2>\r\n//             <span style={estilos.textoGeneral}>\r\n//               Verifique la foto recortada\r\n//             </span>\r\n//             <img alt='Crop' style={estilos.imagenRecortada} src={croppedImage} />\r\n//           </div>\r\n//           <div>\r\n//           <center><Button\r\n//               component='label'\r\n//               role={undefined}\r\n//               variant='outlined'\r\n//               tabIndex={-1}\r\n//               startIcon={<ReplayIcon />}\r\n//               style={estilos.botonFoto}\r\n//               onClick={ocultarPasoTres}\r\n//             >\r\n//               Repetir foto\r\n//               <span style={{ marginLeft: '0px' }}></span>\r\n//             </Button></center>\r\n//             <span style={{ marginLeft: '0px' }}></span>\r\n//             <center><Button\r\n//               component='label'\r\n//               role={undefined}\r\n//               variant='outlined'\r\n//               tabIndex={-1}\r\n//               startIcon={<CheckCircleOutlineIcon />}\r\n//               style={estilos.botonFoto}\r\n//               onClick={pasoSiguiente}\r\n//             >\r\n//               Continuar\r\n//             </Button></center>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n  \r\n//       {show4 && (\r\n//         <div style={{ ...estilos.contenedor, ...estilos.colorTexto }}>\r\n//           <h1 style={estilos.titulo}>{carga}</h1>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n   \r\n// };\r\n\r\n// export default ImageCropper;\r\n\r\nimport React, { useState } from 'react';\r\nimport '../css/estilos.css';\r\n\r\nconst MiComponente = () => {\r\n  const [imagenes, setImagenes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [carga, setCarga] = useState('');\r\n\r\n  const handleImageUpload = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const validFiles = files.filter(file => file.type.startsWith('image/') && file.size <= 5 * 1024 * 1024);\r\n\r\n    if (validFiles.length !== files.length) {\r\n      setError('Algunos archivos no son imágenes o superan el tamaño máximo permitido de 5MB.');\r\n      return;\r\n    }\r\n\r\n    if (selectedIndex === null) {\r\n      const totalImages = imagenes.length + validFiles.length;\r\n      if (totalImages > 3) {\r\n        setError('No se pueden cargar más de 3 imágenes.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    const promises = validFiles.map(file => {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          const result = reader.result;\r\n          // Eliminar el prefijo de la cadena base64\r\n          const base64SinPrefijo = result.replace(/^data:image\\/[a-z]+;base64,/, '');\r\n          resolve(base64SinPrefijo);\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(file);\r\n      });\r\n    });\r\n\r\n    Promise.all(promises)\r\n      .then(results => {\r\n        setError(null);\r\n        if (selectedIndex !== null) {\r\n          setImagenes(prevImagenes => {\r\n            const updatedImages = [...prevImagenes];\r\n            updatedImages[selectedIndex] = results[0];\r\n            return updatedImages;\r\n          });\r\n          setSelectedIndex(null);\r\n        } else {\r\n          setImagenes(prevImagenes => [...prevImagenes, ...results].slice(0, 3));\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setError('Error al cargar las imágenes.');\r\n      });\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    document.getElementById('fileInput').click();\r\n  };\r\n\r\n  const handleImageClick = (index) => {\r\n    setSelectedIndex(index);\r\n    handleButtonClick();\r\n  };\r\n\r\n  const getButtonText = () => {\r\n    if (selectedIndex !== null) return 'Reemplazar Imagen';\r\n    if (imagenes.length === 0) return 'CARGAR INE FRENTE';\r\n    if (imagenes.length === 1) return 'CARGAR INE REVERSO';\r\n    if (imagenes.length === 2) return 'CARGAR SELFIE';            \r\n    return 'VALIDAR DOCUMENTOS';\r\n  };\r\n\r\n  function validarIdentidad() {\r\n    \r\n    if( imagenes.length === 3 ){\r\n\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      const raw = JSON.stringify({\r\n        \"ineFront\": imagenes[0],\r\n        \"ineBack\": imagenes[1],\r\n        \"selfie\": imagenes[2]\r\n      });\r\n      \r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\"\r\n      };\r\n\r\n      console.log(\"FOTOS: \" + raw);\r\n      setCarga(\"Verificación facial en curso \\n Espera un momento...\")\r\n      //fetch(\"localhost:5000/app/verificacion\", requestOptions)        \r\n      fetch(\"https://server-capture-selfie-d4c65bd43858.herokuapp.com/app/verificacion\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        console.log(\"RESULTADO: \" + result);\r\n        setCarga(result)\r\n      })\r\n      .catch((error) => console.error(error));\r\n    } else {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /*imagenes.map((imagen, index) => {   \r\n    if(imagenes.length == 3) {\r\n      console.log(imagenes);\r\n    }    \r\n  });*/\r\n\r\n  return (\r\n    <div className=\"contenedor-imagen\">\r\n      <button className=\"custom-file-upload\" onClick={imagenes.length == 3 ? validarIdentidad : handleButtonClick}>\r\n        {getButtonText()}\r\n      </button>\r\n      <input\r\n        id=\"fileInput\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        onChange={handleImageUpload}\r\n        style={{ display: 'none' }}\r\n      />\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <div className=\"imagenes-container\">\r\n        {imagenes.map((imagen, index) => (\r\n          <>\r\n          <div key={index} className=\"image-wrapper\" onClick={() => handleImageClick(index)}>\r\n            <img src={`data:image/jpeg;base64,${imagen}`} alt={`Cargado por el usuario ${index + 1}`} className=\"imagen\" />\r\n            <span className=\"image-overlay\">Reemplazar</span>\r\n            {/* <textarea className=\"base64-textarea\" readOnly value={imagen}></textarea> */}\r\n          </div> <br></br></>\r\n        ))}\r\n        {\r\n          <div className='textoDiv'>\r\n            {carga}\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiComponente;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nimport './styles.css';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}